package com.mc.bookmanager.member;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityTransaction;

import com.mc.bookmanager.jpa.EntityTemplate;

public class MemberService {
	
	private MemberRepository memberRepository = new MemberRepository();
	
	public Member findMemberById(String userId) {
		
		EntityManager em = EntityTemplate.getEntityManager();
		Member member = null;
		
		try {
			member = em.find(Member.class, userId);
		} finally {
			//EntityManager 종료
			//EntityManager를 종료하면 Entity들은 더이상 EntityManager의 관리대상이 아니게된다.
			// close : 엔티티매니저 종료
			// clear : 엔티티매니저 초기화 엔티티매니저가 관리하고있던 모든 엔티티들을 준영속 상태로 변경
			// detach : 특정 엔티티를 준영속 상태로 변경할때 사용
			em.close();
		}
		
		return member;
	}
	public List<Member> findAllMember(){
		List<Member> members = null;
		
		EntityManager em = EntityTemplate.getEntityManager();
		
		try {
			members = memberRepository.findAllMember(em);
		} finally {
		em.close();
		}
		
		return members;
	}
	public boolean createMember(Member join) {
		
		EntityManager em = EntityTemplate.getEntityManager();
		EntityTransaction tx = em.getTransaction();
		
		//트랜잭션 시작
		tx.begin();
		
		try {
			em.persist(join);
			tx.commit();
			return true;
		} catch (Exception e) {
			e.printStackTrace();
			tx.rollback();
		}finally {
			em.close();
		}
		
		return false;
	}
}
